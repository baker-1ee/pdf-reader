import { http, HttpResponse } from 'msw'

const mockPdfText = `추천의 글

항상 프로그램을 빠르고 정확하게 만드는 동료를 옆에서 지켜보며 떠올린 아이디어가 하나 있었다. "만일 지금 이 순간 모니터로 빨려 들어갈 듯한 저 친구의 머릿속으로 들어가서 어떤 일이 일어나고 있는지 살펴볼 수 있으면 얼마나 좋을까? 내가 프로그램을 작성할 때 드는 느낌과 생각은 다른 개발자와 같을까 다를까?" 이렇게 비기능으로 대표되는 소프트웨어의 여러 가지 속성을 맞추면서 어떻게 기능적으로 요구 사항에 맞춰 개발을 하는지 다른 사람의 시각으로 바라보면 좋겠다는 생각이 주기적으로 떠오르곤 했는데, 이번에 출간된 《프로그래머의 뇌》에서 궁금증을 어느 정도 해소할 수 있어 무척 반가웠다. 물론 사람의 두뇌란 무척 복잡하므로 현대 과학으로도 설명하기 어려운 부문이 분명히 존재하지만, 지레 복잡함에 겁먹고 포기하기보다는 현재까지 알려진 여러 지식을 총 동원해서 이해하려고 노력하는 자세가 무척 중요하다. 프로그램 작성 과정에서 우리는 인지적으로 걸리는 부하를 필연적으로 겪을 수밖에 없다. 이 책은 새로운 프로그래밍 언어와 라이브러리/프레임워크를 학습하거나, 처음부터 새롭게 코드를 작성하거나, 레거시 코드를 현대화하거나, 클린 코드를 위해 리팩터링을 하거나, 모놀리스를 마이크로서비스로 분해하는 등 각종 현실 상황에서 부딪힐 법한 문제점을 체계적으로 짚는다. 동시에 (바람직하게는) 이를 해소하거나, (해소까지는 못하더라도) 완화하는 방법에 대해 여러 가지 연구 결과를 바탕으로 정리했다. 이러한 점은 분명히 책의 매력 포인트이지만 이렇게 두뇌 구조만 설명하다 끝났다면 절반의 성공일 테고, 이론을 토대로 멋진 소프트웨어를 작성할 수 있어야 나머지 절반의 성공도 거둘 수 있을 것이다. 실제로 이 책은 문제 해결 방안과 수단으로서의 코드에 대해 설명한 다음에는 좋은 코드를 작성하기 위한 작명법, 코드 스멜을 감지하고 해소하는 방안, 문제 해결을 가속화하는 학습 방법까지 제시함으로써, 개발자들이 책에서 배운 내용을 즉시 현업에 적용할 수 있는 길을 열어준다.`

export const handlers = [
  http.post('/api/documents/extract', () => {
    return HttpResponse.json({ content: mockPdfText })
  })
]
